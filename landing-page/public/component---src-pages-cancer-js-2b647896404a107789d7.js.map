{"version":3,"sources":["webpack:///./src/pages/cancer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Container","styled","div","withConfig","displayName","componentId","Content","Header","h1","Header2","h2","Line","Cancer","props","_this","_React$Component","call","this","state","data","spinnerOn","getData","bind","_babel_runtime_helpers_assertThisInitialized__WEBPACK_IMPORTED_MODULE_3___default","componentWillMount","getCsvData","fetchCsv","fetch","then","response","reader","body","getReader","decoder","TextDecoder","read","result","decode","value","setState","_callee","csvData","_babel_runtime_regenerator__WEBPACK_IMPORTED_MODULE_0___default","a","wrap","_context","prev","next","sent","Papa","parse","complete","stop","render","react__WEBPACK_IMPORTED_MODULE_5___default","createElement","gatsby__WEBPACK_IMPORTED_MODULE_7__","to","style","textDecoration","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_9__","minHeight","bg","variant","react_bootstrap__WEBPACK_IMPORTED_MODULE_10__","Link","color","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape"],"mappings":"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","file":"component---src-pages-cancer-js-2b647896404a107789d7.js","sourcesContent":["import React from 'react';\nimport Papa from 'papaparse';\nimport { Link } from \"gatsby\";\nimport styled from \"styled-components\"\nimport { Card, Navbar, Nav, Button } from 'react-bootstrap';\nimport Spinner from 'react-spinner-material';\n\nimport axios from  \"axios\";\n// import fetch from 'whatwg-fetch';\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 20;\n  // padding: 1.25rem 0;\n  padding: 0.5rem 0;\n  padding-bottom: 0;\n  background: #ffffff;\n  justifyContent: 'space-between'\n`;\nconst Content = styled.div`\n  max-width: 1200px;\n  margin: 1rem auto;\n  padding: 0 1.25rem;\n  margin-top: 0;\n`;\nconst Header = styled.h1`\n  font-weight: 700;\n  font-size: 48pt;\n  padding-left: 150px;\n  letter-spacing: 10px;\n  @media (max-width: 768px) {\n    font-size: 28pt;\n  }\n`;\nconst Header2 = styled.h2`\n  padding-top: 1rem;\n`;\nconst Line = styled.div`\n  border-bottom: solid 1.5px #000000;\n`;\n\n\n\nclass Cancer extends React.Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            data: [],\n            spinnerOn: true\n        };\n        this.getData = this.getData.bind(this);\n\n    }\n\n\n\n\n    componentWillMount() {\n        this.getCsvData();\n    }\n\n    fetchCsv() {\n        return fetch('https://cors.io/?http://raw.githubusercontent.com/kelsiej/csv/master/Cancer-Treatment-Facility-Spreadsheet-inprogress.csv').then(function (response) {\n            let reader = response.body.getReader();\n            let decoder = new TextDecoder('utf-8');\n\n            return reader.read().then(function (result) {\n                return decoder.decode(result.value);\n            });\n        });\n    }\n\n    getData(result) {\n        this.setState({ data: result.data });\n    }\n\n    async getCsvData() {\n        let csvData = await this.fetchCsv();\n\n        Papa.parse(csvData, {\n            complete: this.getData\n        });\n\n        this.setState({\n            spinnerOn: false\n        });\n\n    }\n\n\n\n    render() {\n        let cancerFacilities = this.state.data;\n        return (\n            <div>\n                <Container>\n                    <div>\n                        <Header><Link to=\"/\" style={{ textDecoration: \"none\" }} className=\"link\">RARET</Link></Header>\n\n                        <Content>\n                            <Line />\n\n                            <Navbar style={{ minHeight: '60px' }} bg=\"light\" variant=\"light\">\n                                <Nav className=\"tabs\">\n                                    <Nav.Link><Link to=\"/\" className=\"link\" style={{ textDecoration: \"none\" }}>Home</Link></Nav.Link>\n                                    <Nav.Link >Resources</Nav.Link>\n                                    <Nav.Link style={{ color: 'black' }}>Road Conditions</Nav.Link>\n                                </Nav>\n                            </Navbar>\n\n                            <Header2> Cancer Treatment Clinics</Header2>\n\n\n\n                        </Content>\n                    </div>\n                    {/* <div>\n                        <Content>\n                            {cancerFacilities.map(function (object, i) {\n                                return <div className={\"row\"} key={i}>\n                                    <Card>\n                                        {[<Card.Body><Card.Title>{object[0]} </Card.Title>\n                                        <Card.Text className=\"fosfo\" key={i}> {object[1]} <br></br>  {object[2]}\n                                                <br></br>  {object[3]}</Card.Text>\n                                        </Card.Body>,\n                                        ]}\n                                    </Card>\n                                </div>;\n                            })}\n\n                            <div className = \"centerDiv\">\n                                <Spinner size={75} spinnerColor={\"#7fffd4\"} spinnerWidth={2} visible={this.state.spinnerOn} />\n                            </div>\n                        </Content>\n                    </div> */}\n                </Container>\n            </div>\n        );\n    }\n}\nexport default Cancer;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}