{"version":3,"sources":["webpack:///./src/pages/roadalerts.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/Robin Datascrape Files/alerts.js"],"names":["Container","styled","div","withConfig","displayName","componentId","Content","Header","h1","Header2","h2","Line","Card","CardBody","CardTitle","h4","CardText","p","Button","button","RoadAlerts","props","_React$Component","call","this","render","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","style","textDecoration","className","react_bootstrap__WEBPACK_IMPORTED_MODULE_3__","minHeight","bg","variant","react_bootstrap__WEBPACK_IMPORTED_MODULE_4__","Link","color","React","Component","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","data","query","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","ProdPageRenderer","_ref","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","rp","$","snoho","king","snohomishAlerts","then","html","table","size","length","names","times","row","push","line","replace","arr","i","name","info","catch","err","console","log","proxyurl","kingAlerts","link","desc","date"],"mappings":"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","file":"component---src-pages-roadalerts-js-2c86ca26fdb8037a88a3.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { Navbar, Nav } from 'react-bootstrap';\nimport {Link} from \"gatsby\";\nimport SnohomishData from \"../components/Robin Datascrape Files/alerts\"\n\nconst Container = styled.div`\n  position: relative;\n  z-index: 20;\n  // padding: 1.25rem 0;\n  padding: 0.5rem 0;\n  padding-bottom: 0;\n  background: #ffffff;\n`;\n\nconst Content = styled.div`\n  max-width: 1200px;\n  margin: 1rem auto;\n  padding: 0 1.25rem;\n  margin-top: 0;\n`;\n\nconst Header = styled.h1`\n  font-weight: 700;\n  font-size: 48pt;\n  padding-left: 150px;\n  letter-spacing: 10px;\n  @media (max-width: 768px) {\n    font-size: 28pt;\n  }\n`;\n\nconst Header2 = styled.h2`\n  padding-top: 1rem;\n`;\nconst Line = styled.div`\n  border-bottom: solid 1.5px #000000;\n`;\nconst Card = styled.div`\n  border: 1px solid #dddddd;\n  border-radius: 8px;\n  margin: 0;\n`;\n\nconst CardBody = styled.div`\n  padding: 1em 1.25em;\n  // margin: 1em 0;\n`;\n\nconst CardTitle = styled.h4``;\n\nconst CardText = styled.p``;\n\nconst Button = styled.button`\n  background-color: #484848;\n  color: white;\n  text-decoration: none;\n  padding: 0.35em 0.75em;\n  border-radius: 4px;\n`;\n\nclass RoadAlerts extends React.Component{\n    constructor(props) {\n      super(props);\n    }\n    render() {\n       return <div>\n          <Container>\n            <Header><Link to=\"/\" style={{textDecoration: \"none\"}} className=\"link\">RARET</Link></Header>\n              <Content>\n                <Line/>\n                <Navbar style={{minHeight: '60px'}} bg=\"light\" variant=\"light\">\n                  <Nav className=\"tabs\">\n                    <Nav.Link><Link to=\"/\" className=\"link\" style={{textDecoration: \"none\"}}>Home</Link></Nav.Link>\n                    <Nav.Link ><Link to=\"/resources\" className=\"link\" style={{textDecoration: \"none\"}}>Resources</Link></Nav.Link>\n                    <Nav.Link style={{color: 'black'}}>Road Conditions</Nav.Link>\n                  </Nav>\n                </Navbar>\n                <Header2>Select a County</Header2>\n                <Card>\n                  <CardBody>\n                  <CardTitle>King County</CardTitle>\n                  <CardText>\n                    4 alerts\n                  </CardText>\n                  <Button variant=\"dark\"><Link to=\"/kingalerts\" style={{textDecoration: \"none\"}}>Select</Link></Button>\n                  </CardBody>\n                </Card>\n                <Card>\n                  <CardBody>\n                  <CardTitle>Snohomish County</CardTitle>\n                  <CardText>\n                    9 alerts\n                  </CardText>\n                  <Button variant=\"dark\"><Link to=\"/snohomishalerts\" style={{textDecoration: \"none\"}}>Select</Link></Button>\n                  </CardBody>\n                </Card>\n                <Card>\n                  <CardBody>\n                  <CardTitle>Pierce County</CardTitle>\n                  <CardText>\n                    4 alerts\n                  </CardText>\n                  <Button variant=\"dark\">Select</Button>\n                  </CardBody>\n                </Card>\n              </Content>\n            </Container>\n            </div>\n       }\n }\n\n export default RoadAlerts;","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","const rp = require('request-promise');\nconst $ = require('cheerio')\nconst snoho = 'http://www.snoco.org/App4/SPW/PWApp/roads/emclosure/index.html';\nconst king = 'https://gismaps.kingcounty.gov/MyCommute/rss.aspx';\n\n\nexport function snohomishAlerts() {\n  return rp(snoho)\n  .then(function(html){\n    // Grab table of closures and size of table\n    let table = $('table > tbody > tr > td > table > tbody > tr > td > table > tbody > tr > td > div > div > div > table > tbody > tr', html);\n    let size = table.length;\n    // OPTION 1\n    // Grab road alerts\n\n    // let road_closed = $('.road_closed', html)\n    // let road_open = $('.road_open', html).text();\n    // let road_times = $('.road_times', html).text();\n    // let road_times_lft = $('.road_times_left', html).text();\n\n    // Loop through table and determine open and closed road indexes\n    // Loop through list of indexes and pop in elements of either open or closed roads with road times\n\n    // OPTION 2\n    // For every table row\n    let names = [];\n    let times = [];\n    for (let row = 0; row < size; row++) {\n        if (row % 2 == 0) {\n            // EVEN (ROAD NAME)\n            names.push(table[row].children[1].children[0].data);\n            //console.log(table[row].children[1].children[0].data);\n        }\n        else {\n            // ODD (ROAD TIMES)\n            let line = [table[row].children[1].children[0].data.replace(/(\\t\\n|\\n|\\t)/gm, \"\"),  \n                        table[row].children[3].children[0].data.replace(/(\\t\\n|\\n|\\t)/gm, \"\"), \n                        table[row].children[5].children[0].data.replace(/(\\t\\n|\\n|\\t)/gm, \"\")];\n            times.push(line);\n        }\n    }\n\n    // Consolidate names and times into an array of objects\n    let arr = [];\n    for (let i = 0; i < names.length; i++) {\n        arr[i] = {\"name\": names[i], \"info\": times[i]};\n    }\n    // console.log(dict);\n    \n    return arr;\n  })\n  .catch(function(err){\n    console.log(\"Error Retrieving Data from Snohomish County Alerts\")\n  });\n\n  // return object;\n}\n\nconst proxyurl = \"https://cors-anywhere.herokuapp.com/\"\n\nexport function kingAlerts() {\n  return rp(proxyurl + king)\n  .then(function(html){\n\n    // Grab XML items\n    let table = $('item' ,html);\n    let size = table.length;\n    \n    // Loop through items and place road names into names\n    //  place link, desc, and date into info\n    let names = [];\n    let info = [];\n    for (let row = 0; row < size; row++) {\n      names.push(table[row].children[0].children[0].data);\n      let line = {\"link\": table[row].children[2].data,\n                  \"desc\": table[row].children[3].children[0].data,\n                  \"date\": table[row].children[6].children[0].data};\n      info.push(line);\n    }\n\n    // Consolidate names and info into an array of objects\n    let arr = [];\n    for (let i = 0; i < names.length; i++) {\n      arr[i] = {\"name\": names[i], \"info\": info[i]}\n    }\n    // console.log(dict);\n    // return {\n    //   dict\n    // }\n    return arr;\n  })\n  .catch(function(err){\n    console.log(\"Error Retrieving Data from King County Alerts\")\n  });\n}\n"],"sourceRoot":""}